<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.itbank.test4" />
	<context:component-scan base-package="com.itbank.service" />
	<context:component-scan base-package="com.itbank.model" />

	<!-- 
		component는 스프링 빈으로 등록할 클래스를 말한다
		지정한 패키지를 스캔하여 특정 어노테이션이 활성화된 클래스를 <bean> 태그로 스프링 빈으로 등록한다는 뜻
		
		따라서, com.itbank.test4 패키지 내부에
		@Controller, @Service, @Repository, @Component, 
		@ControllerAdvice, @RestController 등의 어노테이션이 있는 클래스가 있으면
		해당 클래스를 이용하여 객체를 생성하고 스프링 빈으로 등록한다
		
		스프링 빈으로 사용할 객체가 많다면 일일이 등록하기 보다, 이렇게 패키지 스캔으로 등록한다 	
	 -->
	
	
	
</beans:beans>











